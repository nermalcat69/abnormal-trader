import "./chunk-JLSDPW4D.js";
import "./chunk-MNWBZQKJ.js";
import {
  nextTick
} from "./chunk-3Q27KRJ5.js";
import "./chunk-BOVKDABU.js";
import "./chunk-V6R5RJCE.js";
import "./chunk-RSJERJUL.js";

// node_modules/pinceau/dist/chunks/debug.mjs
function usePinceauRuntimeDebug(tokensHelperConfig) {
  let nextTickGroup = [];
  let nextTickCalled = false;
  const TOKEN_NOT_FOUND_MESSAGE = (path, options) => {
    const { loc } = options;
    const message = [
      `🔑 ${path}`
    ];
    if (loc == null ? void 0 : loc.file) {
      message.push("");
      message.push(`🔗 ${loc.file}`);
    }
    if (loc == null ? void 0 : loc.type) {
      message.push("");
      message.push(`❓ Missing token inside a ${loc.type === "v" ? "variant" : "computed style or CSS prop"}.`);
    }
    nextTickGroup.push(message.join("\n"));
    if (!nextTickCalled) {
      nextTick(() => {
        const title = "🖌️ Pinceau `runtime` encountered some errors!";
        if (import.meta.hot) {
          console.groupCollapsed(title);
        } else {
          console.log(title);
        }
        nextTickGroup.forEach((m) => {
          if (!import.meta.hot && process.server) {
            console.log("\n");
          }
          console.log(m);
          if (!import.meta.hot && process.server) {
            console.log("\n");
          }
        });
        console.log("‼️ This warning will be hidden from production and can be disabled using `dev: false` option.");
        if (import.meta.hot) {
          console.groupEnd();
        }
      });
      nextTickCalled = true;
    }
  };
  if (import.meta.hot) {
    import.meta.hot.on("vite:afterUpdate", () => {
      nextTickGroup = [];
      nextTickCalled = false;
    });
  }
  tokensHelperConfig.onNotFound = TOKEN_NOT_FOUND_MESSAGE;
}
export {
  usePinceauRuntimeDebug
};
//# sourceMappingURL=debug-IFXYBXW5.js.map
