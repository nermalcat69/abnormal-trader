import { AppConfig } from 'nuxt/schema';
import { NuxtApp } from 'nuxt/dist/app/nuxt';
import { Hookable } from 'hookable';
import { BirpcReturn } from 'birpc';
import { v as VueInspectorData, V as VueInspectorClient, H as HookInfo, q as PluginMetric, F as ServerFunctions } from './rpc-ec33d45e.js';

interface NuxtDevtoolsClientHooks {
    /**
     * When the devtools navigates, used for persisting the current tab
     */
    'devtools:navigate': (path: string) => void;
    /**
     * Event emitted when the component inspector is updated
     */
    'host:inspector:update': (data: VueInspectorData) => void;
    /**
     * Event emitted when the component inspector is clicked
     */
    'host:inspector:click': (baseUrl: string, file: string, line: number, column: number) => void;
    /**
     * Event to close the component inspector
     */
    'host:inspector:close': () => void;
    /**
     * Triggers reactivity manually, since Vue won't be reactive across frames)
     */
    'host:update:reactivity': () => void;
}
/**
 * Host client from the App
 */
interface NuxtDevtoolsHostClient {
    nuxt: NuxtApp;
    appConfig: AppConfig;
    hooks: Hookable<NuxtDevtoolsClientHooks>;
    inspector?: {
        instance?: VueInspectorClient;
        enable: () => void;
        disable: () => void;
    };
    getClientHooksMetrics(): HookInfo[];
    getClientPluginMetrics(): PluginMetric[];
    reloadPage(): void;
    closeDevTools(): void;
}
interface NuxtDevtoolsClient {
    rpc: BirpcReturn<ServerFunctions>;
    renderCodeHighlight: (code: string, lang: string, lines?: boolean, theme?: string) => {
        code: string;
        supported: boolean;
    };
    renderMarkdown: (markdown: string) => string;
    colorMode: string;
    extendClientRpc: <ServerFunctions = {}, ClientFunctions = {}>(name: string, functions: ClientFunctions) => BirpcReturn<ServerFunctions, ClientFunctions>;
}
interface NuxtDevtoolsIframeClient {
    host: NuxtDevtoolsHostClient;
    devtools: NuxtDevtoolsClient;
}
interface NuxtDevtoolsGlobal {
    setClient(client: NuxtDevtoolsHostClient): void;
}

export { NuxtDevtoolsClientHooks as N, NuxtDevtoolsHostClient as a, NuxtDevtoolsClient as b, NuxtDevtoolsIframeClient as c, NuxtDevtoolsGlobal as d };
