import{_ as q}from"./Badge.21478015.js";import{_ as z}from"./NCodeBlock.vue.8fd682f9.js";import{_ as G}from"./NCheckbox.vue.002c643b.js";import{a as P,o as p,h as g,L as $,c as F,q as w,f as k,y as K,av as L,aw as M,x as y,r as h,W as H,ax as J,ay as O,u as a,D as I,F as R,i as s,w as d,K as T,l as _,k as Q,az as X}from"./entry.2a062301.js";const Y={class:"n-tip n-tip-base"},Z=P({__name:"NTip",props:{icon:null},setup(e){return(t,r)=>{const n=K;return p(),g("div",Y,[$(t.$slots,"icon",{},()=>[e.icon?(p(),F(n,{key:0,icon:e.icon,class:"n-tip-icon"},null,8,["icon"])):w("",!0)]),k("div",null,[$(t.$slots,"default")])])}}}),C=new Map;function ee(e,t){const r=e;return C.has(r)||C.set(r,te(e,t)),C.get(r)}function te(e,t){const r=L(),n=M(`npm:check:${e}`,()=>y.checkForUpdateFor(e)).data,i=h("idle"),c=h();r.hook("devtools:terminal:exit",({id:l,code:o})=>{l!==c||!c||(i.value=o===0?"updated":"idle")});async function x(l){if(i.value!=="idle")return;const o=await y.getNpmCommand("update",e,t);if(o&&await l(o.join(" ")))return i.value="running",c.value=(await y.runNpmCommand("update",e,t))?.processId,c.value}async function N(){i.value==="updated"&&await y.restartNuxt()}return{info:n,state:i,update:x,restart:N,processId:c}}const ae={key:0},ne={p4:"",flex:"~ col gap-1"},oe={class:"text-lg font-medium leading-6"},se=k("p",{op50:""}," The following command will be executed in your terminal: ",-1),re={flex:"~ gap-3",mt2:"","justify-end":""},de=P({__name:"NpmVersionCheck",props:{packageName:null,options:null,showVersion:{type:Boolean,default:!0}},setup(e){const t=e,r=H(),{info:n,update:i,state:c,processId:x,restart:N}=ee(t.packageName,t.options),l=h(!0),o=h(!0),j=J(),b=O();async function V(){const m=await i(async u=>b.start(u));m&&o.value&&j.value.push({id:m,message:`${t.packageName} has been updated. Do you want to restart the Nuxt server now?`}),m&&l.value&&r.push(`/modules/terminals?id=${encodeURIComponent(m)}`)}return(m,u)=>{const U=q,S=z,B=G,A=Z,D=Q,E=X;return p(),g(R,null,[$(m.$slots,"default",{id:a(x),info:a(n),update:V,state:a(c),restart:a(N)},()=>[a(n)&&e.showVersion?(p(),g("code",ae,I(`v${a(n).current}`),1)):w("",!0),a(n)?.latest?(p(),g(R,{key:1},[a(n).needsUpdate?(p(),g("button",{key:0,onClick:u[0]||(u[0]=v=>V())},[s(U,{"bg-green-400:10":"","text-green-400":"",title:"updates available",textContent:"updates available"})])):(p(),F(U,{key:1,"bg-gray-400:10":"","text-gray-400":"",title:"latest",textContent:"latest"}))],64)):w("",!0)]),s(a(b),null,{default:d(({resolve:v,args:W})=>[s(E,{"model-value":!0,onClose:f=>v(!1)},{default:d(()=>[k("div",ne,[k("h3",oe," Update "+I(t.packageName)+"? ",1),se,s(S,{code:W[0],lang:"bash",my3:"",px4:"",py2:"",border:"~ base rounded",lines:!1},null,8,["code"]),s(B,{modelValue:a(l),"onUpdate:modelValue":u[1]||(u[1]=f=>T(l)?l.value=f:null),n:"primary"},{default:d(()=>[_(" Navigate to terminal ")]),_:1},8,["modelValue"]),s(B,{modelValue:a(o),"onUpdate:modelValue":u[2]||(u[2]=f=>T(o)?o.value=f:null),n:"primary"},{default:d(()=>[_(" Restart Nuxt server after update ")]),_:1},8,["modelValue"]),k("div",re,[s(A,{n:"sm purple","flex-auto":"",icon:"carbon-chemistry"},{default:d(()=>[_(" Experimental feature. Please make sure to backup your project first. ")]),_:1}),s(D,{onClick:f=>v(!1)},{default:d(()=>[_(" Cancel ")]),_:2},1032,["onClick"]),s(D,{n:"solid primary",onClick:f=>v(!0)},{default:d(()=>[_(" Update ")]),_:2},1032,["onClick"])])])]),_:2},1032,["onClose"])]),_:1})],64)}}});export{de as _,Z as a};
