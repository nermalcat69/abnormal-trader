import { JSType, Schema } from 'untyped';

type ConfigInputsTypes = Exclude<JSType, 'symbol' | 'function' | 'any' | 'bigint'> | 'default' | 'icon' | 'file' | 'component' | 'design-token';
type DesignTokensInputsTypes = 'color' | 'size' | 'shadow' | 'size' | 'opacity' | 'font' | 'font-weight' | 'font-size' | 'letter-spacing';
type PickerTypes = 'media-picker' | 'icon-picker';
type InputsTypes = DesignTokensInputsTypes | ConfigInputsTypes;
type PartialSchema = Pick<Schema, 'title' | 'description' | 'default' | 'required'> & {
    [key: string]: any;
};
declare const supportedFields: {
    [key in InputsTypes]: Schema;
};
type StudioFieldData = PartialSchema & {
    type: keyof typeof supportedFields;
    icon?: string;
};
/**
 * Declares a Nuxt Studio compatible configuration field.
 * Supports all type of fields provided by Nuxt Studio and all fields supported from Untyped Schema interface.
 */
declare function field(type: keyof typeof supportedFields | StudioFieldData, defaultValue?: any): Schema;

export { ConfigInputsTypes, DesignTokensInputsTypes, InputsTypes, PartialSchema, PickerTypes, StudioFieldData, field };
