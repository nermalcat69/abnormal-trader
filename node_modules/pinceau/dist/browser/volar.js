import { r, k, s, n, p, q } from './chunk-HK62Y5RQ.js';
import './chunk-ZCHBV2NV.js';
import { b } from './chunk-JF6P2XWI.js';
import './chunk-6AKBLYIL.js';
import { FileCapabilities, FileRangeCapabilities } from '@volar/language-core';

var P=r$1=>({version:1,getEmbeddedFileNames(o,e){let t=[];for(let s=0;s<e.styles.length;s++){let n=e.styles[s];n.lang==="ts"&&n?.content&&t.push(`${o}.cssInTs.${s}.ts`);}return t},resolveEmbeddedFile(o,e,t){let s$1=t.fileName.includes(".cssInTs."),n$1;if(s$1||t.fileName.replace(o,"").match(/^\.(js|ts|jsx|tsx)$/)){let a=C(e);if(e.scriptSetup){let c=e.scriptSetup.lang==="ts",i=r(a,c);i&&Object.keys(i).length&&(n$1=k(JSON.stringify(i)),n$1=s(n$1),n$1=`
const variants = ${n(n$1).code}
`);}}if(s$1){t.content.unshift(`
import type { PinceauMediaQueries, CSSFunctionType } from 'pinceau'`),n$1&&t.content.push(n$1),e.scriptSetup&&t.content.push(e.scriptSetup.content);let a=[`
type OmittedKeysPinceau = 'onVnodeBeforeMount' | 'onVnodeBeforeUnmount' | 'onVnodeBeforeUpdate' | 'onVnodeMounted' | 'onVnodeUnmounted' | 'onVnodeUpdated' | 'key' | 'ref' | 'ref_for' | 'ref_key' | 'style' | 'class'
`,`
type PinceauProps = Omit<InstanceType<typeof import('${o}').default>['$props'], OmittedKeysPinceau>
`,`
function css (declaration: CSSFunctionType<PinceauProps>) { return { declaration } }
`];t.content.push(...a);let c=Number(t.fileName.split(".").slice(-2)[0]),i=e.styles[c];if(!i?.content)return;t.capabilities=FileCapabilities.full,t.kind=1,t.content.push([i?.content,i?.name,0,FileRangeCapabilities.full]);}else n$1&&t.content.push(n$1);}});function C(r){let o={};for(let e=0;e<r.styles.length;e++){let t=r.styles[e];try{t.lang==="ts"&&p(t.content,s=>{let n=q(s);n?.variants&&(o=b(o,n?.variants));});}catch{}}return o}var N=P;

export { N as default };
