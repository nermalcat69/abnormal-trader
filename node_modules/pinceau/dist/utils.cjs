'use strict';

const query = require('./shared/pinceau.71cfe6a3.cjs');
const context = require('./shared/pinceau.98ff0931.cjs');
const define = require('./shared/pinceau.de12e6ec.cjs');
const stringify = require('./shared/pinceau.1adee1a2.cjs');
require('defu');
require('acorn');
require('perf_hooks');
require('ohash');
require('scule');
require('fs');
require('fs/promises');
require('jiti');
require('pathe');
require('vue');
require('style-dictionary-esm');
require('untyped');
require('postcss-nested');
require('postcss-custom-properties');
require('postcss-dark-theme-class');
require('vue/compiler-sfc');
require('recast');
require('recast/parsers/typescript.js');

const index$1 = {
	__proto__: null,
	castVariants: query.castVariants,
	castVariantsPropsAst: query.castVariantsPropsAst,
	evalCssDeclaration: query.evalCssDeclaration,
	pushVariantsProps: query.pushVariantsProps,
	replaceStyleTs: context.replaceStyleTs,
	resolveCssCallees: query.resolveCssCallees,
	resolveRuntimeContents: query.resolveRuntimeContents,
	resolveScriptSetup: context.resolveScriptSetup,
	resolveStyle: context.resolveStyle,
	resolveStyleQuery: context.resolveStyleQuery,
	resolveTemplate: context.resolveTemplate,
	resolveVariantsProps: query.resolveVariantsProps,
	transformAddPinceauClass: context.transformAddPinceauClass,
	transformAddPropsKey: context.transformAddPropsKey,
	transformAddRuntimeImports: context.transformAddRuntimeImports,
	transformComputedStyles: context.transformComputedStyles,
	transformCssFunction: query.transformCssFunction,
	transformDtHelper: context.transformDtHelper,
	transformFinishRuntimeSetup: context.transformFinishRuntimeSetup,
	transformMediaQueries: context.transformMediaQueries,
	transformScheme: context.transformScheme,
	transformStyle: context.transformStyle,
	transformVariants: query.transformVariants,
	transformVueSFC: context.transformVueSFC
};

const index = {
	__proto__: null,
	RESOLVED_ID_RE: context.RESOLVED_ID_RE,
	cssFull: context.cssFull,
	defineTheme: define.defineTheme,
	definitionsFull: context.definitionsFull,
	generateTheme: context.generateTheme,
	importConfigFile: context.importConfigFile,
	loadLayers: context.loadLayers,
	prepareOutputDir: context.prepareOutputDir,
	resolveConfigFile: context.resolveConfigFile,
	resolveConfigLayer: context.resolveConfigLayer,
	resolveConfigSources: context.resolveConfigSources,
	resolveDefinitions: context.resolveDefinitions,
	resolveMediaQueriesKeys: context.resolveMediaQueriesKeys,
	schemaFull: context.schemaFull,
	stubOutputs: context.stubOutputs,
	tsFull: context.tsFull,
	usePinceauConfigContext: context.usePinceauConfigContext,
	usePinceauContext: context.usePinceauContext,
	usePinceauVirtualStore: context.usePinceauVirtualStore,
	utilsFull: context.utilsFull
};

exports.JS_EXTENSIONS = query.JS_EXTENSIONS;
exports.STYLES_EXTENSIONS = query.STYLES_EXTENSIONS;
exports.SUPPORTED_EXTENSIONS = query.SUPPORTED_EXTENSIONS;
exports.astTypes = query.astTypes;
exports.debugMarker = query.debugMarker;
exports.defaultExport = query.defaultExport;
exports.errorMessage = query.errorMessage;
exports.expressionToAst = query.expressionToAst;
exports.fileLink = query.fileLink;
exports.findLineColumn = query.findLineColumn;
exports.getDebugContext = query.getDebugContext;
exports.merger = query.merger;
exports.message = query.message;
exports.parseAst = query.parseAst;
exports.parsePinceauQuery = query.parsePinceauQuery;
exports.parseVueComponent = query.parseVueComponent;
exports.printAst = query.printAst;
exports.updateDebugContext = query.updateDebugContext;
exports.useDebugPerformance = query.useDebugPerformance;
exports.visitAst = query.visitAst;
exports.flattenTokens = context.flattenTokens;
exports.isSafeConstName = context.isSafeConstName;
exports.loadVueStyle = context.loadVueStyle;
exports.objectPaths = context.objectPaths;
exports.registerAliases = context.registerAliases;
exports.registerPostCssPlugins = context.registerPostCssPlugins;
exports.DARK = stringify.DARK;
exports.INITIAL = stringify.INITIAL;
exports.LIGHT = stringify.LIGHT;
exports.castValue = stringify.castValue;
exports.castValues = stringify.castValues;
exports.createTokensHelper = stringify.createTokensHelper;
exports.darkRegex = stringify.darkRegex;
exports.dtRegex = stringify.dtRegex;
exports.get = stringify.get;
exports.getResolvedSelectors = stringify.getResolvedSelectors;
exports.keyRegex = stringify.keyRegex;
exports.lightRegex = stringify.lightRegex;
exports.mqCssRegex = stringify.mqCssRegex;
exports.mqPlainRegex = stringify.mqPlainRegex;
exports.normalizeConfig = stringify.normalizeConfig;
exports.outputFileNames = stringify.outputFileNames;
exports.pathToVarName = stringify.pathToVarName;
exports.referencesRegex = stringify.referencesRegex;
exports.resolveCssProperty = stringify.resolveCssProperty;
exports.resolveCustomDirectives = stringify.resolveCustomDirectives;
exports.resolveReferences = stringify.resolveReferences;
exports.resolveThemeRule = stringify.resolveThemeRule;
exports.resolveVariableFromPath = stringify.resolveVariableFromPath;
exports.responsiveMediaQueryRegex = stringify.responsiveMediaQueryRegex;
exports.set = stringify.set;
exports.stringify = stringify.stringify;
exports.transformTokensToVariable = stringify.transformTokensToVariable;
exports.variantsRegex = stringify.variantsRegex;
exports.walkTokens = stringify.walkTokens;
exports.theme = index;
exports.transforms = index$1;
